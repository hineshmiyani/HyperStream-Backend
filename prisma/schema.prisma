// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  username        String         @unique
  email           String         @unique
  displayName     String?
  password        String?
  bio             String?        @db.Text
  avatar          String?        @db.Text
  coverImage      String?        @db.Text
  refreshToken    String?        @db.Text
  googleId        String?        @unique
  facebookId      String?        @unique
  authProviders   AuthProvider[]
  isEmailVerified Boolean        @default(false)

  following  Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id String @id @default(uuid())

  // The user who is following another user
  follower   User   @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  followerId String

  // The user who is being followed
  following   User   @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  followingId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Ensure that a user cannot follow the same user more than once
  @@unique([followerId, followingId])
  // Indexes to speed up queries involving followerId and followingId
  @@index([followerId])
  @@index([followingId])
}

enum AuthProvider {
  GOOGLE
  FACEBOOK
  JWT
}
